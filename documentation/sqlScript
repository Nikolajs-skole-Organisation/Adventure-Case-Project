-- Create database
DROP DATABASE IF EXISTS adventurexp;
CREATE DATABASE adventurexp;
USE adventurexp;

-- Employee table
CREATE TABLE Employee (
    employee_id   INT AUTO_INCREMENT PRIMARY KEY,
    name          VARCHAR(100) NOT NULL,
    phone         VARCHAR(20) NOT NULL,
    email         VARCHAR (100) NOT NULL,
    role          VARCHAR(50)
);

-- Shift table
CREATE TABLE Shift (
    shift_id      INT AUTO_INCREMENT PRIMARY KEY,
    start_time    DATETIME NOT NULL,
    end_time      DATETIME NOT NULL
);

-- Junction table for Shift <-> Employee (many-to-many)
CREATE TABLE Shift_Employee (
    shift_id    INT NOT NULL,
    employee_id INT NOT NULL,
    PRIMARY KEY (shift_id, employee_id),
    FOREIGN KEY (shift_id) REFERENCES Shift(shift_id),
    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
);

-- Activity table
CREATE TABLE Activity (
    activity_id      INT AUTO_INCREMENT PRIMARY KEY,
    name             VARCHAR(100) NOT NULL,
    description      TEXT NOT NULL,
    min_age          INT,
    min_height       INT,
    max_participants INT NOT NULL
);

-- Reservation table
CREATE TABLE Reservation (
    reservation_id INT AUTO_INCREMENT PRIMARY KEY,
    start_time DATETIME NOT NULL,
    end_time   DATETIME,
    participants   INT NOT NULL,
    contact_name   VARCHAR(100) NOT NULL,
    contact_phone  VARCHAR(20) NOT NULL,
    contact_email  VARCHAR (100) NOT NULL,
    activity_id    INT NOT NULL,
    FOREIGN KEY (activity_id) REFERENCES Activity(activity_id)
);

-- Junction table for Reservation <-> Employee (many-to-many)
CREATE TABLE Reservation_Employee (
    reservation_id INT NOT NULL,
    employee_id    INT NOT NULL,
    PRIMARY KEY (reservation_id, employee_id),
    FOREIGN KEY (reservation_id) REFERENCES Reservation(reservation_id),
    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
);
